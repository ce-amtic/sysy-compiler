Grammar

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | FuncDef
    3         | ExternalDef
    4         | CompUnit Decl
    5         | CompUnit FuncDef

    6 ExternalDef: HASH INCLUDE LT Ident DOT Ident GT

    7 Decl: ConstDecl
    8     | VarDecl

    9 VarDecl: INT VarDefList SEMICOLON

   10 ConstDecl: CONST INT ConstDeflist SEMICOLON

   11 ConstDeflist: ConstDef
   12             | ConstDeflist COMMA ConstDef

   13 ConstDef: Ident ASSIGN ConstExp
   14         | Ident ConstDims ASSIGN ConstInitVal

   15 ConstDims: LBRACKET ConstExp RBRACKET
   16          | ConstDims LBRACKET ConstExp RBRACKET

   17 ConstInitVal: LBRACE RBRACE
   18             | LBRACE ConstInitValList RBRACE

   19 ConstInitValList: ConstExp
   20                 | ConstInitVal
   21                 | ConstInitValList COMMA ConstExp
   22                 | ConstInitValList COMMA ConstInitVal

   23 VarDefList: VarDef
   24           | VarDefList COMMA VarDef

   25 VarDef: Ident
   26       | Ident ConstDims
   27       | Ident ASSIGN Exp
   28       | Ident ConstDims ASSIGN InitVal

   29 InitVal: LBRACE RBRACE
   30        | LBRACE InitValList RBRACE

   31 InitValList: Exp
   32            | InitVal
   33            | InitValList COMMA Exp
   34            | InitValList COMMA InitVal

   35 FuncDef: FuncName EnterFunc LPAREN RPAREN Block ExitFunc
   36        | FuncName EnterFunc LPAREN ParseParams RPAREN Block ExitFunc

   37 FuncName: INT Ident
   38         | VOID Ident

   39 EnterFunc: %empty

   40 ExitFunc: %empty

   41 ParseParams: FuncFParams

   42 FuncFParams: FuncFParam
   43            | FuncFParams COMMA FuncFParam

   44 FuncFParam: INT Ident
   45           | INT Ident FuncIdentDims

   46 FuncIdentDims: LBRACKET RBRACKET
   47              | LBRACKET Exp RBRACKET
   48              | FuncIdentDims LBRACKET RBRACKET
   49              | FuncIdentDims LBRACKET Exp RBRACKET

   50 Block: LBRACE RBRACE
   51      | LBRACE BlockItemlist RBRACE

   52 BlockItemlist: BlockItem
   53              | BlockItemlist BlockItem

   54 BlockItem: Decl
   55          | Stmt

   56 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt
   57     | IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel
   58     | WHILE EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel Stmt ExitStmt
   59     | BREAK SEMICOLON
   60     | CONTINUE SEMICOLON
   61     | LVal ASSIGN Exp SEMICOLON
   62     | RETURN Exp SEMICOLON
   63     | RETURN SEMICOLON
   64     | Exp SEMICOLON
   65     | Block

   66 EnterStmt: %empty

   67 ExitStmt: %empty

   68 NewLabel: %empty

   69 AfterElse: %empty

   70 EnterWhile: %empty

   71 ExitWhile: %empty

   72 Exp: AddExp

   73 Cond: LOrExp

   74 LVal: Ident
   75     | Ident Arr

   76 Arr: LBRACKET Exp RBRACKET
   77    | Arr LBRACKET Exp RBRACKET

   78 PrimaryExp: Ident
   79           | Ident Arr
   80           | Number
   81           | String
   82           | LPAREN Exp RPAREN
   83           | ADDRESSOF Ident
   84           | ADDRESSOF Ident Arr

   85 UnaryExp: PrimaryExp
   86         | Ident LPAREN RPAREN
   87         | Ident LPAREN FuncRParams RPAREN
   88         | UnaryOp UnaryExp

   89 UnaryOp: ADD
   90        | SUB
   91        | NOT

   92 FuncRParams: Exp
   93            | FuncRParams COMMA Exp

   94 ConstExp: AddExp

   95 MulExp: UnaryExp
   96       | MulExp MUL UnaryExp
   97       | MulExp DIV UnaryExp
   98       | MulExp MOD UnaryExp

   99 AddExp: MulExp
  100       | AddExp ADD MulExp
  101       | AddExp SUB MulExp

  102 RelExp: NewLabel AddExp LT AddExp
  103       | NewLabel AddExp LE AddExp
  104       | NewLabel AddExp GT AddExp
  105       | NewLabel AddExp GE AddExp

  106 EqExp: NewLabel AddExp
  107      | NewLabel AddExp EQUAL AddExp
  108      | NewLabel AddExp NE AddExp

  109 BoolExp: RelExp
  110        | EqExp

  111 LAndExp: BoolExp
  112        | LAndExp AND BoolExp

  113 LOrExp: LAndExp
  114       | LOrExp OR LAndExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    Number <num> (258) 80
    Ident <str> (259) 6 13 14 25 26 27 28 37 38 44 45 74 75 78 79 83 84 86 87
    String <str> (260) 81
    INT (261) 9 10 37 44 45
    CONST (262) 10
    VOID (263) 38
    WHILE (264) 58
    RETURN (265) 62 63
    BREAK (266) 59
    CONTINUE (267) 60
    IF (268) 56 57
    INCLUDE (269) 6
    LE (270) 103
    GE (271) 105
    LT (272) 6 102
    GT (273) 6 104
    EQUAL (274) 107
    NE (275) 108
    AND (276) 112
    OR (277) 114
    ADD (278) 89 100
    SUB (279) 90 101
    MUL (280) 96
    DIV (281) 97
    NOT (282) 91
    MOD (283) 98
    LPAREN (284) 35 36 56 57 58 82 86 87
    RPAREN (285) 35 36 56 57 58 82 86 87
    LBRACE (286) 17 18 29 30 50 51
    RBRACE (287) 17 18 29 30 50 51
    LBRACKET (288) 15 16 46 47 48 49 76 77
    RBRACKET (289) 15 16 46 47 48 49 76 77
    SEMICOLON (290) 9 10 59 60 61 62 63 64
    COMMA (291) 12 21 22 24 33 34 43 93
    ASSIGN (292) 13 14 27 28 61
    DOT (293) 6
    HASH (294) 6
    ADDRESSOF (295) 83 84
    IFX (296)
    ELSE (297) 57


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    CompUnit (44)
        on left: 1 2 3 4 5
        on right: 0 4 5
    ExternalDef (45)
        on left: 6
        on right: 3
    Decl (46)
        on left: 7 8
        on right: 1 4 54
    VarDecl (47)
        on left: 9
        on right: 8
    ConstDecl (48)
        on left: 10
        on right: 7
    ConstDeflist (49)
        on left: 11 12
        on right: 10 12
    ConstDef (50)
        on left: 13 14
        on right: 11 12
    ConstDims <dims> (51)
        on left: 15 16
        on right: 14 16 26 28
    ConstInitVal <list> (52)
        on left: 17 18
        on right: 14 20 22
    ConstInitValList <list> (53)
        on left: 19 20 21 22
        on right: 18 21 22
    VarDefList (54)
        on left: 23 24
        on right: 9 24
    VarDef (55)
        on left: 25 26 27 28
        on right: 23 24
    InitVal <explist> (56)
        on left: 29 30
        on right: 28 32 34
    InitValList <explist> (57)
        on left: 31 32 33 34
        on right: 30 33 34
    FuncDef (58)
        on left: 35 36
        on right: 2 5
    FuncName <symbol> (59)
        on left: 37 38
        on right: 35 36
    EnterFunc (60)
        on left: 39
        on right: 35 36
    ExitFunc (61)
        on left: 40
        on right: 35 36
    ParseParams <paramdeflist> (62)
        on left: 41
        on right: 36
    FuncFParams <paramdeflist> (63)
        on left: 42 43
        on right: 41 43
    FuncFParam <paramdef> (64)
        on left: 44 45
        on right: 42 43
    FuncIdentDims <dims> (65)
        on left: 46 47 48 49
        on right: 45 48 49
    Block (66)
        on left: 50 51
        on right: 35 36 65
    BlockItemlist (67)
        on left: 52 53
        on right: 51 53
    BlockItem (68)
        on left: 54 55
        on right: 52 53
    Stmt (69)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 55 56 57 58
    EnterStmt (70)
        on left: 66
        on right: 56 57 58
    ExitStmt (71)
        on left: 67
        on right: 56 57 58
    NewLabel <num> (72)
        on left: 68
        on right: 56 57 58 102 103 104 105 106 107 108
    AfterElse <boolexp> (73)
        on left: 69
        on right: 57
    EnterWhile <boolexp> (74)
        on left: 70
        on right: 58
    ExitWhile <boolexp> (75)
        on left: 71
        on right: 58
    Exp <exp> (76)
        on left: 72
        on right: 27 31 33 47 49 61 62 64 76 77 82 92 93
    Cond <boolexp> (77)
        on left: 73
        on right: 56 57 58
    LVal <lvalue> (78)
        on left: 74 75
        on right: 61
    Arr <expdims> (79)
        on left: 76 77
        on right: 75 77 79 84
    PrimaryExp <exp> (80)
        on left: 78 79 80 81 82 83 84
        on right: 85
    UnaryExp <exp> (81)
        on left: 85 86 87 88
        on right: 88 95 96 97 98
    UnaryOp <num> (82)
        on left: 89 90 91
        on right: 88
    FuncRParams <paramlist> (83)
        on left: 92 93
        on right: 87 93
    ConstExp <exp> (84)
        on left: 94
        on right: 13 15 16 19 21
    MulExp <exp> (85)
        on left: 95 96 97 98
        on right: 96 97 98 99 100 101
    AddExp <exp> (86)
        on left: 99 100 101
        on right: 72 94 100 101 102 103 104 105 106 107 108
    RelExp <boolexp> (87)
        on left: 102 103 104 105
        on right: 109
    EqExp <boolexp> (88)
        on left: 106 107 108
        on right: 110
    BoolExp <boolexp> (89)
        on left: 109 110
        on right: 111 112
    LAndExp <boolexp> (90)
        on left: 111 112
        on right: 112 113 114
    LOrExp <boolexp> (91)
        on left: 113 114
        on right: 73 114


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3
    HASH   shift, and go to state 4

    CompUnit     go to state 5
    ExternalDef  go to state 6
    Decl         go to state 7
    VarDecl      go to state 8
    ConstDecl    go to state 9
    FuncDef      go to state 10
    FuncName     go to state 11


State 1

    9 VarDecl: INT . VarDefList SEMICOLON
   37 FuncName: INT . Ident

    Ident  shift, and go to state 12

    VarDefList  go to state 13
    VarDef      go to state 14


State 2

   10 ConstDecl: CONST . INT ConstDeflist SEMICOLON

    INT  shift, and go to state 15


State 3

   38 FuncName: VOID . Ident

    Ident  shift, and go to state 16


State 4

    6 ExternalDef: HASH . INCLUDE LT Ident DOT Ident GT

    INCLUDE  shift, and go to state 17


State 5

    0 $accept: CompUnit . $end
    4 CompUnit: CompUnit . Decl
    5         | CompUnit . FuncDef

    $end   shift, and go to state 18
    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    Decl       go to state 19
    VarDecl    go to state 8
    ConstDecl  go to state 9
    FuncDef    go to state 20
    FuncName   go to state 11


State 6

    3 CompUnit: ExternalDef .

    $default  reduce using rule 3 (CompUnit)


State 7

    1 CompUnit: Decl .

    $default  reduce using rule 1 (CompUnit)


State 8

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 9

    7 Decl: ConstDecl .

    $default  reduce using rule 7 (Decl)


State 10

    2 CompUnit: FuncDef .

    $default  reduce using rule 2 (CompUnit)


State 11

   35 FuncDef: FuncName . EnterFunc LPAREN RPAREN Block ExitFunc
   36        | FuncName . EnterFunc LPAREN ParseParams RPAREN Block ExitFunc

    $default  reduce using rule 39 (EnterFunc)

    EnterFunc  go to state 21


State 12

   25 VarDef: Ident .
   26       | Ident . ConstDims
   27       | Ident . ASSIGN Exp
   28       | Ident . ConstDims ASSIGN InitVal
   37 FuncName: INT Ident .

    LBRACKET  shift, and go to state 22
    ASSIGN    shift, and go to state 23

    LPAREN    reduce using rule 37 (FuncName)
    $default  reduce using rule 25 (VarDef)

    ConstDims  go to state 24


State 13

    9 VarDecl: INT VarDefList . SEMICOLON
   24 VarDefList: VarDefList . COMMA VarDef

    SEMICOLON  shift, and go to state 25
    COMMA      shift, and go to state 26


State 14

   23 VarDefList: VarDef .

    $default  reduce using rule 23 (VarDefList)


State 15

   10 ConstDecl: CONST INT . ConstDeflist SEMICOLON

    Ident  shift, and go to state 27

    ConstDeflist  go to state 28
    ConstDef      go to state 29


State 16

   38 FuncName: VOID Ident .

    $default  reduce using rule 38 (FuncName)


State 17

    6 ExternalDef: HASH INCLUDE . LT Ident DOT Ident GT

    LT  shift, and go to state 30


State 18

    0 $accept: CompUnit $end .

    $default  accept


State 19

    4 CompUnit: CompUnit Decl .

    $default  reduce using rule 4 (CompUnit)


State 20

    5 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 5 (CompUnit)


State 21

   35 FuncDef: FuncName EnterFunc . LPAREN RPAREN Block ExitFunc
   36        | FuncName EnterFunc . LPAREN ParseParams RPAREN Block ExitFunc

    LPAREN  shift, and go to state 31


State 22

   15 ConstDims: LBRACKET . ConstExp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    ConstExp    go to state 43
    MulExp      go to state 44
    AddExp      go to state 45


State 23

   27 VarDef: Ident ASSIGN . Exp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 46
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 24

   16 ConstDims: ConstDims . LBRACKET ConstExp RBRACKET
   26 VarDef: Ident ConstDims .
   28       | Ident ConstDims . ASSIGN InitVal

    LBRACKET  shift, and go to state 48
    ASSIGN    shift, and go to state 49

    $default  reduce using rule 26 (VarDef)


State 25

    9 VarDecl: INT VarDefList SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 26

   24 VarDefList: VarDefList COMMA . VarDef

    Ident  shift, and go to state 50

    VarDef  go to state 51


State 27

   13 ConstDef: Ident . ASSIGN ConstExp
   14         | Ident . ConstDims ASSIGN ConstInitVal

    LBRACKET  shift, and go to state 22
    ASSIGN    shift, and go to state 52

    ConstDims  go to state 53


State 28

   10 ConstDecl: CONST INT ConstDeflist . SEMICOLON
   12 ConstDeflist: ConstDeflist . COMMA ConstDef

    SEMICOLON  shift, and go to state 54
    COMMA      shift, and go to state 55


State 29

   11 ConstDeflist: ConstDef .

    $default  reduce using rule 11 (ConstDeflist)


State 30

    6 ExternalDef: HASH INCLUDE LT . Ident DOT Ident GT

    Ident  shift, and go to state 56


State 31

   35 FuncDef: FuncName EnterFunc LPAREN . RPAREN Block ExitFunc
   36        | FuncName EnterFunc LPAREN . ParseParams RPAREN Block ExitFunc

    INT     shift, and go to state 57
    RPAREN  shift, and go to state 58

    ParseParams  go to state 59
    FuncFParams  go to state 60
    FuncFParam   go to state 61


State 32

   80 PrimaryExp: Number .

    $default  reduce using rule 80 (PrimaryExp)


State 33

   78 PrimaryExp: Ident .
   79           | Ident . Arr
   86 UnaryExp: Ident . LPAREN RPAREN
   87         | Ident . LPAREN FuncRParams RPAREN

    LPAREN    shift, and go to state 62
    LBRACKET  shift, and go to state 63

    $default  reduce using rule 78 (PrimaryExp)

    Arr  go to state 64


State 34

   81 PrimaryExp: String .

    $default  reduce using rule 81 (PrimaryExp)


State 35

   89 UnaryOp: ADD .

    $default  reduce using rule 89 (UnaryOp)


State 36

   90 UnaryOp: SUB .

    $default  reduce using rule 90 (UnaryOp)


State 37

   91 UnaryOp: NOT .

    $default  reduce using rule 91 (UnaryOp)


State 38

   82 PrimaryExp: LPAREN . Exp RPAREN

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 65
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 39

   83 PrimaryExp: ADDRESSOF . Ident
   84           | ADDRESSOF . Ident Arr

    Ident  shift, and go to state 66


State 40

   85 UnaryExp: PrimaryExp .

    $default  reduce using rule 85 (UnaryExp)


State 41

   95 MulExp: UnaryExp .

    $default  reduce using rule 95 (MulExp)


State 42

   88 UnaryExp: UnaryOp . UnaryExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 67
    UnaryOp     go to state 42


State 43

   15 ConstDims: LBRACKET ConstExp . RBRACKET

    RBRACKET  shift, and go to state 68


State 44

   96 MulExp: MulExp . MUL UnaryExp
   97       | MulExp . DIV UnaryExp
   98       | MulExp . MOD UnaryExp
   99 AddExp: MulExp .

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 99 (AddExp)


State 45

   94 ConstExp: AddExp .
  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 94 (ConstExp)


State 46

   27 VarDef: Ident ASSIGN Exp .

    $default  reduce using rule 27 (VarDef)


State 47

   72 Exp: AddExp .
  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 72 (Exp)


State 48

   16 ConstDims: ConstDims LBRACKET . ConstExp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    ConstExp    go to state 74
    MulExp      go to state 44
    AddExp      go to state 45


State 49

   28 VarDef: Ident ConstDims ASSIGN . InitVal

    LBRACE  shift, and go to state 75

    InitVal  go to state 76


State 50

   25 VarDef: Ident .
   26       | Ident . ConstDims
   27       | Ident . ASSIGN Exp
   28       | Ident . ConstDims ASSIGN InitVal

    LBRACKET  shift, and go to state 22
    ASSIGN    shift, and go to state 23

    $default  reduce using rule 25 (VarDef)

    ConstDims  go to state 24


State 51

   24 VarDefList: VarDefList COMMA VarDef .

    $default  reduce using rule 24 (VarDefList)


State 52

   13 ConstDef: Ident ASSIGN . ConstExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    ConstExp    go to state 77
    MulExp      go to state 44
    AddExp      go to state 45


State 53

   14 ConstDef: Ident ConstDims . ASSIGN ConstInitVal
   16 ConstDims: ConstDims . LBRACKET ConstExp RBRACKET

    LBRACKET  shift, and go to state 48
    ASSIGN    shift, and go to state 78


State 54

   10 ConstDecl: CONST INT ConstDeflist SEMICOLON .

    $default  reduce using rule 10 (ConstDecl)


State 55

   12 ConstDeflist: ConstDeflist COMMA . ConstDef

    Ident  shift, and go to state 27

    ConstDef  go to state 79


State 56

    6 ExternalDef: HASH INCLUDE LT Ident . DOT Ident GT

    DOT  shift, and go to state 80


State 57

   44 FuncFParam: INT . Ident
   45           | INT . Ident FuncIdentDims

    Ident  shift, and go to state 81


State 58

   35 FuncDef: FuncName EnterFunc LPAREN RPAREN . Block ExitFunc

    LBRACE  shift, and go to state 82

    Block  go to state 83


State 59

   36 FuncDef: FuncName EnterFunc LPAREN ParseParams . RPAREN Block ExitFunc

    RPAREN  shift, and go to state 84


State 60

   41 ParseParams: FuncFParams .
   43 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA  shift, and go to state 85

    $default  reduce using rule 41 (ParseParams)


State 61

   42 FuncFParams: FuncFParam .

    $default  reduce using rule 42 (FuncFParams)


State 62

   86 UnaryExp: Ident LPAREN . RPAREN
   87         | Ident LPAREN . FuncRParams RPAREN

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    RPAREN     shift, and go to state 86
    ADDRESSOF  shift, and go to state 39

    Exp          go to state 87
    PrimaryExp   go to state 40
    UnaryExp     go to state 41
    UnaryOp      go to state 42
    FuncRParams  go to state 88
    MulExp       go to state 44
    AddExp       go to state 47


State 63

   76 Arr: LBRACKET . Exp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 89
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 64

   77 Arr: Arr . LBRACKET Exp RBRACKET
   79 PrimaryExp: Ident Arr .

    LBRACKET  shift, and go to state 90

    $default  reduce using rule 79 (PrimaryExp)


State 65

   82 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 91


State 66

   83 PrimaryExp: ADDRESSOF Ident .
   84           | ADDRESSOF Ident . Arr

    LBRACKET  shift, and go to state 63

    $default  reduce using rule 83 (PrimaryExp)

    Arr  go to state 92


State 67

   88 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 88 (UnaryExp)


State 68

   15 ConstDims: LBRACKET ConstExp RBRACKET .

    $default  reduce using rule 15 (ConstDims)


State 69

   96 MulExp: MulExp MUL . UnaryExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 93
    UnaryOp     go to state 42


State 70

   97 MulExp: MulExp DIV . UnaryExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 94
    UnaryOp     go to state 42


State 71

   98 MulExp: MulExp MOD . UnaryExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 95
    UnaryOp     go to state 42


State 72

  100 AddExp: AddExp ADD . MulExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 96


State 73

  101 AddExp: AddExp SUB . MulExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 97


State 74

   16 ConstDims: ConstDims LBRACKET ConstExp . RBRACKET

    RBRACKET  shift, and go to state 98


State 75

   29 InitVal: LBRACE . RBRACE
   30        | LBRACE . InitValList RBRACE

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 75
    RBRACE     shift, and go to state 99
    ADDRESSOF  shift, and go to state 39

    InitVal      go to state 100
    InitValList  go to state 101
    Exp          go to state 102
    PrimaryExp   go to state 40
    UnaryExp     go to state 41
    UnaryOp      go to state 42
    MulExp       go to state 44
    AddExp       go to state 47


State 76

   28 VarDef: Ident ConstDims ASSIGN InitVal .

    $default  reduce using rule 28 (VarDef)


State 77

   13 ConstDef: Ident ASSIGN ConstExp .

    $default  reduce using rule 13 (ConstDef)


State 78

   14 ConstDef: Ident ConstDims ASSIGN . ConstInitVal

    LBRACE  shift, and go to state 103

    ConstInitVal  go to state 104


State 79

   12 ConstDeflist: ConstDeflist COMMA ConstDef .

    $default  reduce using rule 12 (ConstDeflist)


State 80

    6 ExternalDef: HASH INCLUDE LT Ident DOT . Ident GT

    Ident  shift, and go to state 105


State 81

   44 FuncFParam: INT Ident .
   45           | INT Ident . FuncIdentDims

    LBRACKET  shift, and go to state 106

    $default  reduce using rule 44 (FuncFParam)

    FuncIdentDims  go to state 107


State 82

   50 Block: LBRACE . RBRACE
   51      | LBRACE . BlockItemlist RBRACE

    Number     shift, and go to state 32
    Ident      shift, and go to state 108
    String     shift, and go to state 34
    INT        shift, and go to state 109
    CONST      shift, and go to state 2
    WHILE      shift, and go to state 110
    RETURN     shift, and go to state 111
    BREAK      shift, and go to state 112
    CONTINUE   shift, and go to state 113
    IF         shift, and go to state 114
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 82
    RBRACE     shift, and go to state 115
    ADDRESSOF  shift, and go to state 39

    Decl           go to state 116
    VarDecl        go to state 8
    ConstDecl      go to state 9
    Block          go to state 117
    BlockItemlist  go to state 118
    BlockItem      go to state 119
    Stmt           go to state 120
    Exp            go to state 121
    LVal           go to state 122
    PrimaryExp     go to state 40
    UnaryExp       go to state 41
    UnaryOp        go to state 42
    MulExp         go to state 44
    AddExp         go to state 47


State 83

   35 FuncDef: FuncName EnterFunc LPAREN RPAREN Block . ExitFunc

    $default  reduce using rule 40 (ExitFunc)

    ExitFunc  go to state 123


State 84

   36 FuncDef: FuncName EnterFunc LPAREN ParseParams RPAREN . Block ExitFunc

    LBRACE  shift, and go to state 82

    Block  go to state 124


State 85

   43 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 57

    FuncFParam  go to state 125


State 86

   86 UnaryExp: Ident LPAREN RPAREN .

    $default  reduce using rule 86 (UnaryExp)


State 87

   92 FuncRParams: Exp .

    $default  reduce using rule 92 (FuncRParams)


State 88

   87 UnaryExp: Ident LPAREN FuncRParams . RPAREN
   93 FuncRParams: FuncRParams . COMMA Exp

    RPAREN  shift, and go to state 126
    COMMA   shift, and go to state 127


State 89

   76 Arr: LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 128


State 90

   77 Arr: Arr LBRACKET . Exp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 129
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 91

   82 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 82 (PrimaryExp)


State 92

   77 Arr: Arr . LBRACKET Exp RBRACKET
   84 PrimaryExp: ADDRESSOF Ident Arr .

    LBRACKET  shift, and go to state 90

    $default  reduce using rule 84 (PrimaryExp)


State 93

   96 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 96 (MulExp)


State 94

   97 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 97 (MulExp)


State 95

   98 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 98 (MulExp)


State 96

   96 MulExp: MulExp . MUL UnaryExp
   97       | MulExp . DIV UnaryExp
   98       | MulExp . MOD UnaryExp
  100 AddExp: AddExp ADD MulExp .

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 100 (AddExp)


State 97

   96 MulExp: MulExp . MUL UnaryExp
   97       | MulExp . DIV UnaryExp
   98       | MulExp . MOD UnaryExp
  101 AddExp: AddExp SUB MulExp .

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 101 (AddExp)


State 98

   16 ConstDims: ConstDims LBRACKET ConstExp RBRACKET .

    $default  reduce using rule 16 (ConstDims)


State 99

   29 InitVal: LBRACE RBRACE .

    $default  reduce using rule 29 (InitVal)


State 100

   32 InitValList: InitVal .

    $default  reduce using rule 32 (InitValList)


State 101

   30 InitVal: LBRACE InitValList . RBRACE
   33 InitValList: InitValList . COMMA Exp
   34            | InitValList . COMMA InitVal

    RBRACE  shift, and go to state 130
    COMMA   shift, and go to state 131


State 102

   31 InitValList: Exp .

    $default  reduce using rule 31 (InitValList)


State 103

   17 ConstInitVal: LBRACE . RBRACE
   18             | LBRACE . ConstInitValList RBRACE

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 103
    RBRACE     shift, and go to state 132
    ADDRESSOF  shift, and go to state 39

    ConstInitVal      go to state 133
    ConstInitValList  go to state 134
    PrimaryExp        go to state 40
    UnaryExp          go to state 41
    UnaryOp           go to state 42
    ConstExp          go to state 135
    MulExp            go to state 44
    AddExp            go to state 45


State 104

   14 ConstDef: Ident ConstDims ASSIGN ConstInitVal .

    $default  reduce using rule 14 (ConstDef)


State 105

    6 ExternalDef: HASH INCLUDE LT Ident DOT Ident . GT

    GT  shift, and go to state 136


State 106

   46 FuncIdentDims: LBRACKET . RBRACKET
   47              | LBRACKET . Exp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    RBRACKET   shift, and go to state 137
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 138
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 107

   45 FuncFParam: INT Ident FuncIdentDims .
   48 FuncIdentDims: FuncIdentDims . LBRACKET RBRACKET
   49              | FuncIdentDims . LBRACKET Exp RBRACKET

    LBRACKET  shift, and go to state 139

    $default  reduce using rule 45 (FuncFParam)


State 108

   74 LVal: Ident .
   75     | Ident . Arr
   78 PrimaryExp: Ident .
   79           | Ident . Arr
   86 UnaryExp: Ident . LPAREN RPAREN
   87         | Ident . LPAREN FuncRParams RPAREN

    LPAREN    shift, and go to state 62
    LBRACKET  shift, and go to state 63

    ASSIGN    reduce using rule 74 (LVal)
    $default  reduce using rule 78 (PrimaryExp)

    Arr  go to state 140


State 109

    9 VarDecl: INT . VarDefList SEMICOLON

    Ident  shift, and go to state 50

    VarDefList  go to state 13
    VarDef      go to state 14


State 110

   58 Stmt: WHILE . EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel Stmt ExitStmt

    $default  reduce using rule 70 (EnterWhile)

    EnterWhile  go to state 141


State 111

   62 Stmt: RETURN . Exp SEMICOLON
   63     | RETURN . SEMICOLON

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    SEMICOLON  shift, and go to state 142
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 143
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 112

   59 Stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 113

   60 Stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 114

   56 Stmt: IF . LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt
   57     | IF . LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    LPAREN  shift, and go to state 146


State 115

   50 Block: LBRACE RBRACE .

    $default  reduce using rule 50 (Block)


State 116

   54 BlockItem: Decl .

    $default  reduce using rule 54 (BlockItem)


State 117

   65 Stmt: Block .

    $default  reduce using rule 65 (Stmt)


State 118

   51 Block: LBRACE BlockItemlist . RBRACE
   53 BlockItemlist: BlockItemlist . BlockItem

    Number     shift, and go to state 32
    Ident      shift, and go to state 108
    String     shift, and go to state 34
    INT        shift, and go to state 109
    CONST      shift, and go to state 2
    WHILE      shift, and go to state 110
    RETURN     shift, and go to state 111
    BREAK      shift, and go to state 112
    CONTINUE   shift, and go to state 113
    IF         shift, and go to state 114
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 82
    RBRACE     shift, and go to state 147
    ADDRESSOF  shift, and go to state 39

    Decl        go to state 116
    VarDecl     go to state 8
    ConstDecl   go to state 9
    Block       go to state 117
    BlockItem   go to state 148
    Stmt        go to state 120
    Exp         go to state 121
    LVal        go to state 122
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 119

   52 BlockItemlist: BlockItem .

    $default  reduce using rule 52 (BlockItemlist)


State 120

   55 BlockItem: Stmt .

    $default  reduce using rule 55 (BlockItem)


State 121

   64 Stmt: Exp . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 122

   61 Stmt: LVal . ASSIGN Exp SEMICOLON

    ASSIGN  shift, and go to state 150


State 123

   35 FuncDef: FuncName EnterFunc LPAREN RPAREN Block ExitFunc .

    $default  reduce using rule 35 (FuncDef)


State 124

   36 FuncDef: FuncName EnterFunc LPAREN ParseParams RPAREN Block . ExitFunc

    $default  reduce using rule 40 (ExitFunc)

    ExitFunc  go to state 151


State 125

   43 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 43 (FuncFParams)


State 126

   87 UnaryExp: Ident LPAREN FuncRParams RPAREN .

    $default  reduce using rule 87 (UnaryExp)


State 127

   93 FuncRParams: FuncRParams COMMA . Exp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 152
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 128

   76 Arr: LBRACKET Exp RBRACKET .

    $default  reduce using rule 76 (Arr)


State 129

   77 Arr: Arr LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 153


State 130

   30 InitVal: LBRACE InitValList RBRACE .

    $default  reduce using rule 30 (InitVal)


State 131

   33 InitValList: InitValList COMMA . Exp
   34            | InitValList COMMA . InitVal

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 75
    ADDRESSOF  shift, and go to state 39

    InitVal     go to state 154
    Exp         go to state 155
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 132

   17 ConstInitVal: LBRACE RBRACE .

    $default  reduce using rule 17 (ConstInitVal)


State 133

   20 ConstInitValList: ConstInitVal .

    $default  reduce using rule 20 (ConstInitValList)


State 134

   18 ConstInitVal: LBRACE ConstInitValList . RBRACE
   21 ConstInitValList: ConstInitValList . COMMA ConstExp
   22                 | ConstInitValList . COMMA ConstInitVal

    RBRACE  shift, and go to state 156
    COMMA   shift, and go to state 157


State 135

   19 ConstInitValList: ConstExp .

    $default  reduce using rule 19 (ConstInitValList)


State 136

    6 ExternalDef: HASH INCLUDE LT Ident DOT Ident GT .

    $default  reduce using rule 6 (ExternalDef)


State 137

   46 FuncIdentDims: LBRACKET RBRACKET .

    $default  reduce using rule 46 (FuncIdentDims)


State 138

   47 FuncIdentDims: LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 158


State 139

   48 FuncIdentDims: FuncIdentDims LBRACKET . RBRACKET
   49              | FuncIdentDims LBRACKET . Exp RBRACKET

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    RBRACKET   shift, and go to state 159
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 160
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 140

   75 LVal: Ident Arr .
   77 Arr: Arr . LBRACKET Exp RBRACKET
   79 PrimaryExp: Ident Arr .

    LBRACKET  shift, and go to state 90

    ASSIGN    reduce using rule 75 (LVal)
    $default  reduce using rule 79 (PrimaryExp)


State 141

   58 Stmt: WHILE EnterWhile . EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel Stmt ExitStmt

    $default  reduce using rule 66 (EnterStmt)

    EnterStmt  go to state 161


State 142

   63 Stmt: RETURN SEMICOLON .

    $default  reduce using rule 63 (Stmt)


State 143

   62 Stmt: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 144

   59 Stmt: BREAK SEMICOLON .

    $default  reduce using rule 59 (Stmt)


State 145

   60 Stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 60 (Stmt)


State 146

   56 Stmt: IF LPAREN . Cond RPAREN NewLabel EnterStmt Stmt ExitStmt
   57     | IF LPAREN . Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 163
    Cond      go to state 164
    RelExp    go to state 165
    EqExp     go to state 166
    BoolExp   go to state 167
    LAndExp   go to state 168
    LOrExp    go to state 169


State 147

   51 Block: LBRACE BlockItemlist RBRACE .

    $default  reduce using rule 51 (Block)


State 148

   53 BlockItemlist: BlockItemlist BlockItem .

    $default  reduce using rule 53 (BlockItemlist)


State 149

   64 Stmt: Exp SEMICOLON .

    $default  reduce using rule 64 (Stmt)


State 150

   61 Stmt: LVal ASSIGN . Exp SEMICOLON

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    Exp         go to state 170
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 151

   36 FuncDef: FuncName EnterFunc LPAREN ParseParams RPAREN Block ExitFunc .

    $default  reduce using rule 36 (FuncDef)


State 152

   93 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 93 (FuncRParams)


State 153

   77 Arr: Arr LBRACKET Exp RBRACKET .

    $default  reduce using rule 77 (Arr)


State 154

   34 InitValList: InitValList COMMA InitVal .

    $default  reduce using rule 34 (InitValList)


State 155

   33 InitValList: InitValList COMMA Exp .

    $default  reduce using rule 33 (InitValList)


State 156

   18 ConstInitVal: LBRACE ConstInitValList RBRACE .

    $default  reduce using rule 18 (ConstInitVal)


State 157

   21 ConstInitValList: ConstInitValList COMMA . ConstExp
   22                 | ConstInitValList COMMA . ConstInitVal

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 103
    ADDRESSOF  shift, and go to state 39

    ConstInitVal  go to state 171
    PrimaryExp    go to state 40
    UnaryExp      go to state 41
    UnaryOp       go to state 42
    ConstExp      go to state 172
    MulExp        go to state 44
    AddExp        go to state 45


State 158

   47 FuncIdentDims: LBRACKET Exp RBRACKET .

    $default  reduce using rule 47 (FuncIdentDims)


State 159

   48 FuncIdentDims: FuncIdentDims LBRACKET RBRACKET .

    $default  reduce using rule 48 (FuncIdentDims)


State 160

   49 FuncIdentDims: FuncIdentDims LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 173


State 161

   58 Stmt: WHILE EnterWhile EnterStmt . LPAREN Cond RPAREN ExitWhile NewLabel Stmt ExitStmt

    LPAREN  shift, and go to state 174


State 162

   62 Stmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 62 (Stmt)


State 163

  102 RelExp: NewLabel . AddExp LT AddExp
  103       | NewLabel . AddExp LE AddExp
  104       | NewLabel . AddExp GT AddExp
  105       | NewLabel . AddExp GE AddExp
  106 EqExp: NewLabel . AddExp
  107      | NewLabel . AddExp EQUAL AddExp
  108      | NewLabel . AddExp NE AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 175


State 164

   56 Stmt: IF LPAREN Cond . RPAREN NewLabel EnterStmt Stmt ExitStmt
   57     | IF LPAREN Cond . RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    RPAREN  shift, and go to state 176


State 165

  109 BoolExp: RelExp .

    $default  reduce using rule 109 (BoolExp)


State 166

  110 BoolExp: EqExp .

    $default  reduce using rule 110 (BoolExp)


State 167

  111 LAndExp: BoolExp .

    $default  reduce using rule 111 (LAndExp)


State 168

  112 LAndExp: LAndExp . AND BoolExp
  113 LOrExp: LAndExp .

    AND  shift, and go to state 177

    $default  reduce using rule 113 (LOrExp)


State 169

   73 Cond: LOrExp .
  114 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 178

    $default  reduce using rule 73 (Cond)


State 170

   61 Stmt: LVal ASSIGN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 171

   22 ConstInitValList: ConstInitValList COMMA ConstInitVal .

    $default  reduce using rule 22 (ConstInitValList)


State 172

   21 ConstInitValList: ConstInitValList COMMA ConstExp .

    $default  reduce using rule 21 (ConstInitValList)


State 173

   49 FuncIdentDims: FuncIdentDims LBRACKET Exp RBRACKET .

    $default  reduce using rule 49 (FuncIdentDims)


State 174

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN . Cond RPAREN ExitWhile NewLabel Stmt ExitStmt

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 163
    Cond      go to state 180
    RelExp    go to state 165
    EqExp     go to state 166
    BoolExp   go to state 167
    LAndExp   go to state 168
    LOrExp    go to state 169


State 175

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  102 RelExp: NewLabel AddExp . LT AddExp
  103       | NewLabel AddExp . LE AddExp
  104       | NewLabel AddExp . GT AddExp
  105       | NewLabel AddExp . GE AddExp
  106 EqExp: NewLabel AddExp .
  107      | NewLabel AddExp . EQUAL AddExp
  108      | NewLabel AddExp . NE AddExp

    LE     shift, and go to state 181
    GE     shift, and go to state 182
    LT     shift, and go to state 183
    GT     shift, and go to state 184
    EQUAL  shift, and go to state 185
    NE     shift, and go to state 186
    ADD    shift, and go to state 72
    SUB    shift, and go to state 73

    $default  reduce using rule 106 (EqExp)


State 176

   56 Stmt: IF LPAREN Cond RPAREN . NewLabel EnterStmt Stmt ExitStmt
   57     | IF LPAREN Cond RPAREN . NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 187


State 177

  112 LAndExp: LAndExp AND . BoolExp

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 163
    RelExp    go to state 165
    EqExp     go to state 166
    BoolExp   go to state 188


State 178

  114 LOrExp: LOrExp OR . LAndExp

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 163
    RelExp    go to state 165
    EqExp     go to state 166
    BoolExp   go to state 167
    LAndExp   go to state 189


State 179

   61 Stmt: LVal ASSIGN Exp SEMICOLON .

    $default  reduce using rule 61 (Stmt)


State 180

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond . RPAREN ExitWhile NewLabel Stmt ExitStmt

    RPAREN  shift, and go to state 190


State 181

  103 RelExp: NewLabel AddExp LE . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 191


State 182

  105 RelExp: NewLabel AddExp GE . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 192


State 183

  102 RelExp: NewLabel AddExp LT . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 193


State 184

  104 RelExp: NewLabel AddExp GT . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 194


State 185

  107 EqExp: NewLabel AddExp EQUAL . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 195


State 186

  108 EqExp: NewLabel AddExp NE . AddExp

    Number     shift, and go to state 32
    Ident      shift, and go to state 33
    String     shift, and go to state 34
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    ADDRESSOF  shift, and go to state 39

    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 196


State 187

   56 Stmt: IF LPAREN Cond RPAREN NewLabel . EnterStmt Stmt ExitStmt
   57     | IF LPAREN Cond RPAREN NewLabel . EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 66 (EnterStmt)

    EnterStmt  go to state 197


State 188

  112 LAndExp: LAndExp AND BoolExp .

    $default  reduce using rule 112 (LAndExp)


State 189

  112 LAndExp: LAndExp . AND BoolExp
  114 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 177

    $default  reduce using rule 114 (LOrExp)


State 190

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond RPAREN . ExitWhile NewLabel Stmt ExitStmt

    $default  reduce using rule 71 (ExitWhile)

    ExitWhile  go to state 198


State 191

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  103 RelExp: NewLabel AddExp LE AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 103 (RelExp)


State 192

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  105 RelExp: NewLabel AddExp GE AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 105 (RelExp)


State 193

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  102 RelExp: NewLabel AddExp LT AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 102 (RelExp)


State 194

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  104 RelExp: NewLabel AddExp GT AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 104 (RelExp)


State 195

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  107 EqExp: NewLabel AddExp EQUAL AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 107 (EqExp)


State 196

  100 AddExp: AddExp . ADD MulExp
  101       | AddExp . SUB MulExp
  108 EqExp: NewLabel AddExp NE AddExp .

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73

    $default  reduce using rule 108 (EqExp)


State 197

   56 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt . Stmt ExitStmt
   57     | IF LPAREN Cond RPAREN NewLabel EnterStmt . Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    Number     shift, and go to state 32
    Ident      shift, and go to state 108
    String     shift, and go to state 34
    WHILE      shift, and go to state 110
    RETURN     shift, and go to state 111
    BREAK      shift, and go to state 112
    CONTINUE   shift, and go to state 113
    IF         shift, and go to state 114
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 82
    ADDRESSOF  shift, and go to state 39

    Block       go to state 117
    Stmt        go to state 199
    Exp         go to state 121
    LVal        go to state 122
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 198

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile . NewLabel Stmt ExitStmt

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 200


State 199

   56 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt . ExitStmt
   57     | IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt . ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 67 (ExitStmt)

    ExitStmt  go to state 201


State 200

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel . Stmt ExitStmt

    Number     shift, and go to state 32
    Ident      shift, and go to state 108
    String     shift, and go to state 34
    WHILE      shift, and go to state 110
    RETURN     shift, and go to state 111
    BREAK      shift, and go to state 112
    CONTINUE   shift, and go to state 113
    IF         shift, and go to state 114
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 82
    ADDRESSOF  shift, and go to state 39

    Block       go to state 117
    Stmt        go to state 202
    Exp         go to state 121
    LVal        go to state 122
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 201

   56 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt .
   57     | IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt . ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    ELSE  shift, and go to state 203

    $default  reduce using rule 56 (Stmt)


State 202

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel Stmt . ExitStmt

    $default  reduce using rule 67 (ExitStmt)

    ExitStmt  go to state 204


State 203

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE . AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 69 (AfterElse)

    AfterElse  go to state 205


State 204

   58 Stmt: WHILE EnterWhile EnterStmt LPAREN Cond RPAREN ExitWhile NewLabel Stmt ExitStmt .

    $default  reduce using rule 58 (Stmt)


State 205

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse . NewLabel EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 206


State 206

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel . EnterStmt Stmt ExitStmt NewLabel

    $default  reduce using rule 66 (EnterStmt)

    EnterStmt  go to state 207


State 207

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt . Stmt ExitStmt NewLabel

    Number     shift, and go to state 32
    Ident      shift, and go to state 108
    String     shift, and go to state 34
    WHILE      shift, and go to state 110
    RETURN     shift, and go to state 111
    BREAK      shift, and go to state 112
    CONTINUE   shift, and go to state 113
    IF         shift, and go to state 114
    ADD        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 82
    ADDRESSOF  shift, and go to state 39

    Block       go to state 117
    Stmt        go to state 208
    Exp         go to state 121
    LVal        go to state 122
    PrimaryExp  go to state 40
    UnaryExp    go to state 41
    UnaryOp     go to state 42
    MulExp      go to state 44
    AddExp      go to state 47


State 208

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt . ExitStmt NewLabel

    $default  reduce using rule 67 (ExitStmt)

    ExitStmt  go to state 209


State 209

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt . NewLabel

    $default  reduce using rule 68 (NewLabel)

    NewLabel  go to state 210


State 210

   57 Stmt: IF LPAREN Cond RPAREN NewLabel EnterStmt Stmt ExitStmt ELSE AfterElse NewLabel EnterStmt Stmt ExitStmt NewLabel .

    $default  reduce using rule 57 (Stmt)
